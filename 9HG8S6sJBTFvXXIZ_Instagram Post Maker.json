{
  "createdAt": "2025-08-20T07:06:28.215Z",
  "updatedAt": "2025-08-22T06:28:26.000Z",
  "id": "9HG8S6sJBTFvXXIZ",
  "name": "Instagram Post Maker",
  "active": false,
  "isArchived": true,
  "nodes": [
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.0-flash",
          "mode": "list",
          "cachedResultName": "models/gemini-2.0-flash"
        },
        "messages": {
          "values": [
            {
              "content": "={\n  \"role\": \"You are an expert Instagram content creator. When given a topic, always create a detailed, realistic, and visually appealing caption that directly matches the topic.\",\n  \"platform\": \"Instagram\",\n  \"style\": \"viral\",\n  \"rules\": {\n    \"1\": \"Caption must be directly about the given topic only (do not change or generalize).\",\n    \"2\": \"Write a creative caption (max 400 words).\",\n    \"3\": \"Add 8â€“12 relevant hashtags based strictly on the topic.\",\n    \"4\": \"Output must be ONLY valid JSON.\",\n    \"5\": \"Do not include markdown, code blocks, or extra text.\",\n    \"6\": \"Output ONLY valid JSON as the final result.\",\n    \"7\": \"Do not wrap it in quotes, markdown, or inside a 'text' field.\"\n  },\n  \"length\": \"max 400 words\",\n  \"output_structure\": {\n    \"caption\": \"string\",\n    \"hashtags\": [\"#tag1\", \"#tag2\", \"...\"]\n  },\n  \"topic\": \"{{ $json.content }}\"\n}\n"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        -544,
        784
      ],
      "id": "e1af37ab-97d3-42b7-b616-ccd680234ace",
      "name": "Message a model"
    },
    {
      "parameters": {
        "jsCode": "// Get the text output from previous node\nlet rawText = $input.first().json.content.parts[0].text;\n\n// Remove code block markers if they exist (```json ... ```)\nrawText = rawText.replace(/^```json\\s*/, '').replace(/```$/, '').trim();\n\nlet parsed;\ntry {\n  parsed = JSON.parse(rawText);\n} catch (e) {\n  throw new Error(\"Failed to parse JSON from model output: \" + e.message + \"\\nRaw text:\\n\" + rawText);\n}\n\n// Return caption and hashtags separately\nreturn [\n  {\n    json: {\n      caption: parsed.caption,\n      hashtags: parsed.hashtags\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -96,
        784
      ],
      "id": "4e9a49e0-8c1c-4009-8fe5-e912bc302207",
      "name": "Code"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api-inference.huggingface.co/models/prompthero/openjourney",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "inputs",
              "value": "={{ $json.caption }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true,
              "responseFormat": "text"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        160,
        784
      ],
      "id": "86a1a95b-35c4-494e-ab19-779e3db71b93",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        368,
        784
      ],
      "id": "abad659e-c327-4605-b0a2-8445204743f3",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "name": "=image_{{ $now.format(\"MMDD_HHmmss\") }}.png",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1ic-czhUoqk-Zv_d9UPDfdMfOfuBTT2Ru",
          "mode": "list",
          "cachedResultName": "n8n",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1ic-czhUoqk-Zv_d9UPDfdMfOfuBTT2Ru"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        576,
        784
      ],
      "id": "e792de42-0b40-45e8-aac9-4bd3a7930e5f",
      "name": "Upload file"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "13DDEADwMnbDzVYr_5nLkhLRer2XmqAKfHfNzKvK8ftQ",
          "mode": "list",
          "cachedResultName": "instagram",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/13DDEADwMnbDzVYr_5nLkhLRer2XmqAKfHfNzKvK8ftQ/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 988067313,
          "mode": "list",
          "cachedResultName": "Instagram",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/13DDEADwMnbDzVYr_5nLkhLRer2XmqAKfHfNzKvK8ftQ/edit#gid=988067313"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Caption": "={{ $('Code').item.json.caption }}",
            "Hashtags": "={{ $('Code').item.json.hashtags }}",
            "CreatedAt": "={{ $now.format(\"MM_DD_HHmmss\") }}",
            "Image": "={{ $json.id }}",
            "Image_url": "=https://drive.google.com/file/d/{{ $json.id }}/view ",
            "image_name": "={{ $json.name }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Caption",
              "displayName": "Caption",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Hashtags",
              "displayName": "Hashtags",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "image_name",
              "displayName": "image_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Image",
              "displayName": "Image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Image_url",
              "displayName": "Image_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "CreatedAt",
              "displayName": "CreatedAt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        784,
        784
      ],
      "id": "aba047dc-c389-4a06-b5d5-2358a6008e99",
      "name": "Append row in sheet"
    },
    {
      "parameters": {
        "url": "https://discord.com/api/v10/channels/1408038449503801405/messages?limit=1",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1248,
        800
      ],
      "id": "7698962a-b646-4b86-9f50-156d815a2898",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "seconds",
              "secondsInterval": 5
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1440,
        800
      ],
      "id": "3b8d4235-c55b-473e-8ea4-4bb05567d142",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "58445f67-2176-4af8-8b08-e840823087d9",
              "leftValue": "={{ $json.isRecent }}",
              "rightValue": "false",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -880,
        800
      ],
      "id": "2ec5a2e9-fd3f-4374-a502-bbf4b045e7aa",
      "name": "If"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Define what \"recent\" means (7 seconds)\nconst RECENT_TIME_WINDOW = 7 * 1000; // 7 seconds in milliseconds\n\n// Current item\nconst input = $json;\n\nconst messageTime = new Date(input.timestamp);\nconst currentTime = new Date();\nconst timeDifference = currentTime - messageTime;\n\n// Check if message was created within the last 7 seconds\nconst isRecent = timeDifference >= 0 && timeDifference >= RECENT_TIME_WINDOW;\n\nreturn {\n    content: input.content,\n    timestamp: input.timestamp,\n    isRecent: isRecent,\n    currentTime: currentTime.toISOString(),\n    timeDifferenceMs: timeDifference,\n    timeDifferenceSeconds: (timeDifference / 1000).toFixed(2)\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1072,
        800
      ],
      "id": "194fb045-c9ea-49b0-9d93-a4c210c2662a",
      "name": "Code1"
    }
  ],
  "connections": {
    "Message a model": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Upload file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload file": {
      "main": [
        [
          {
            "node": "Append row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "b84cdf7f-254e-402b-98dd-f515f1d76ace",
  "triggerCount": 1,
  "shared": [
    {
      "createdAt": "2025-08-20T07:06:28.221Z",
      "updatedAt": "2025-08-20T07:06:28.221Z",
      "role": "workflow:owner",
      "workflowId": "9HG8S6sJBTFvXXIZ",
      "projectId": "nSUbNPn8P23MJaxQ",
      "project": {
        "createdAt": "2025-08-19T13:24:42.941Z",
        "updatedAt": "2025-08-19T13:25:25.513Z",
        "id": "nSUbNPn8P23MJaxQ",
        "name": "Sanjay Makwana <sanjay.makwana@e2m.solutions>",
        "type": "personal",
        "icon": null,
        "description": null,
        "projectRelations": [
          {
            "createdAt": "2025-08-19T13:24:42.957Z",
            "updatedAt": "2025-08-19T13:24:42.957Z",
            "userId": "bec985b6-4c5b-4f76-a28c-588449d2617c",
            "projectId": "nSUbNPn8P23MJaxQ",
            "user": {
              "createdAt": "2025-08-19T13:24:42.285Z",
              "updatedAt": "2025-10-06T04:08:20.000Z",
              "id": "bec985b6-4c5b-4f76-a28c-588449d2617c",
              "email": "sanjay.makwana@e2m.solutions",
              "firstName": "Sanjay",
              "lastName": "Makwana",
              "personalizationAnswers": {
                "version": "v4",
                "personalization_survey_submitted_at": "2025-08-19T13:25:56.618Z",
                "personalization_survey_n8n_version": "1.107.3",
                "automationGoalDevops": [
                  "ticketing-systems-integrations",
                  "data-syncing"
                ],
                "companyIndustryExtended": [
                  "it-industry"
                ],
                "companySize": "<20",
                "companyType": "other",
                "role": "it",
                "reportedSource": "google"
              },
              "settings": {
                "userActivated": true,
                "easyAIWorkflowOnboarded": true,
                "firstSuccessfulWorkflowId": "9HG8S6sJBTFvXXIZ",
                "userActivatedAt": 1755781899419,
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1756103555035
                }
              },
              "disabled": false,
              "mfaEnabled": false,
              "lastActiveAt": "2025-10-06",
              "isPending": false
            }
          }
        ]
      }
    }
  ],
  "tags": []
}