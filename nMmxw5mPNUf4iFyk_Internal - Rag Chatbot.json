{
  "createdAt": "2025-08-26T06:21:31.290Z",
  "updatedAt": "2025-08-26T06:57:39.000Z",
  "id": "nMmxw5mPNUf4iFyk",
  "name": "Internal - Rag Chatbot",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "public": true,
        "initialMessages": "Hi there! ðŸ‘‹",
        "options": {
          "loadPreviousSession": "memory",
          "customCss": ":root {\n  /* Colors */\n  --chat-color-bg: #f7f7f8;\n  --chat-color-bg-dark: #ffffff;\n  --chat-color-bot: #ffffff;\n  --chat-color-user: #20b69e;\n  --chat-color-user-text: #ffffff;\n  --chat-color-border: #dcdcdc;\n  --chat-color-input: #ffffff;\n  --chat-color-send: #e74266;\n  --chat-color-send-hover: #cf3c5c;\n  --chat-color-text: #101010;\n\n  /* Layout */\n  --chat-radius: 1rem;\n  --chat-spacing: 1rem;\n  --chat-font-family: system-ui, sans-serif;\n}\n\n/* ====== Chat Container ====== */\n.chat-container {\n  width: 100%;\n  max-width: 420px;\n  height: 600px;\n  background: var(--chat-color-bg);\n  display: flex;\n  flex-direction: column;\n  border: 1px solid var(--chat-color-border);\n  border-radius: var(--chat-radius);\n  overflow: hidden;\n  font-family: var(--chat-font-family);\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\n}\n\n/* ====== Header (optional) ====== */\n.chat-header {\n  background: var(--chat-color-bg-dark);\n  padding: 1rem;\n  font-weight: 600;\n  border-bottom: 1px solid var(--chat-color-border);\n}\n\n/* ====== Messages List ====== */\n.chat-messages {\n  flex: 1;\n  padding: 1rem;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n  background: var(--chat-color-bg);\n}\n\n/* ====== Message Bubble ====== */\n.chat-message {\n  max-width: 85%;\n  padding: 0.75rem 1rem;\n  font-size: 0.95rem;\n  line-height: 1.5;\n  border-radius: var(--chat-radius);\n  white-space: pre-wrap;\n  word-wrap: break-word;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.04);\n  transition: all 0.2s ease;\n}\n\n/* Bot Message */\n.chat-message.bot {\n  background: var(--chat-color-bot);\n  color: var(--chat-color-text);\n  align-self: flex-start;\n  border-top-left-radius: 0;\n}\n\n/* User Message */\n.chat-message.user {\n  background: var(--chat-color-user);\n  color: var(--chat-color-user-text);\n  align-self: flex-end;\n  border-top-right-radius: 0;\n}\n\n/* ====== Input Area ====== */\n.chat-input {\n  background: var(--chat-color-input);\n  padding: 0.75rem 1rem;\n  border-top: 1px solid var(--chat-color-border);\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n}\n\n/* Textarea */\n.chat-input textarea {\n  flex: 1;\n  resize: none;\n  border: none;\n  font-size: 0.95rem;\n  padding: 0.6rem 0.8rem;\n  border-radius: 0.75rem;\n  background: #f0f0f0;\n  color: #000;\n  font-family: inherit;\n  line-height: 1.4;\n  max-height: 10rem;\n  transition: background 0.2s;\n}\n\n.chat-input textarea:focus {\n  outline: none;\n  background: #e6e6e6;\n}\n\n/* ====== Send Button ====== */\n.chat-input button.send-button {\n  background: var(--chat-color-send);\n  color: #fff;\n  border: none;\n  padding: 0.6rem 1rem;\n  border-radius: 0.75rem;\n  font-weight: 600;\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n\n.chat-input button.send-button:hover {\n  background: var(--chat-color-send-hover);\n}\n\n/* ====== Optional: File Button ====== */\n.chat-input button.file-button {\n  background: transparent;\n  color: var(--chat-color-user);\n  border: none;\n  font-size: 1.1rem;\n  cursor: pointer;\n  transition: color 0.2s;\n}\n\n.chat-input button.file-button:hover {\n  color: var(--chat-color-send);\n}\n"
        }
      },
      "id": "692aa1a5-b8b5-4138-aa36-8e0af80580a9",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        224,
        480
      ],
      "webhookId": "f61e1b9f-0f81-46b8-828e-668bfeeeb3eb"
    },
    {
      "parameters": {
        "contextWindowLength": 10
      },
      "id": "de947c69-04d4-4c66-abda-e1cbca931621",
      "name": "Postgres Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.1,
      "position": [
        688,
        704
      ]
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "1f982595-ea19-4c1b-8c18-36bdae0bc68f",
      "name": "Supabase Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        688,
        912
      ]
    },
    {
      "parameters": {
        "name": "project_data",
        "description": "Retrieve information about the projects"
      },
      "id": "162a196d-cf2c-4931-a35b-056751473590",
      "name": "Vector Store Tool",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        800,
        704
      ]
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "You are a helpful assistant. You will use the vector database to retrieve relevant information and respond to the user's query."
        }
      },
      "id": "23e062ee-dbfe-43b8-b35e-2ff4a2f9044a",
      "name": "RAG Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        576,
        480
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e556566e-20a1-48b4-b01e-197a402b5a5f",
              "name": "file_id",
              "value": "={{ $json.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "4a0fbecb-f20f-4153-9909-ae88ca085390",
      "name": "Set ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1184,
        832
      ],
      "disabled": true
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "6f6ea9a7-33d8-4083-be1c-a17a35c2b82c",
      "name": "Extract from File",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -752,
        832
      ],
      "disabled": true
    },
    {
      "parameters": {
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "file_id",
                "value": "={{ $('Set ID').item.json.file_id }}"
              }
            ]
          }
        }
      },
      "id": "0786a981-2e76-4470-b2c9-8f95dbd23788",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        -416,
        864
      ],
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "2a660121-d26c-4038-a3eb-6b1cb4b443cc",
      "name": "Recursive Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        -336,
        1056
      ],
      "disabled": true
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1q09cfTJVGSX_ToYV4bjJ-ftSlOcv7J4i",
          "mode": "list",
          "cachedResultName": "RAG",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1q09cfTJVGSX_ToYV4bjJ-ftSlOcv7J4i"
        },
        "event": "fileUpdated",
        "options": {}
      },
      "id": "7d49f50b-1ac2-4269-863e-565c60215bf9",
      "name": "File Updated",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -1472,
        1632
      ],
      "disabled": true
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1q09cfTJVGSX_ToYV4bjJ-ftSlOcv7J4i",
          "mode": "list",
          "cachedResultName": "RAG",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1q09cfTJVGSX_ToYV4bjJ-ftSlOcv7J4i"
        },
        "event": "fileCreated",
        "options": {}
      },
      "id": "c666ab98-b93e-4532-8de1-c4e06d4273c4",
      "name": "New File",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -1408,
        832
      ],
      "disabled": true
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.file_id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "0303cb8a-5ba2-460b-8703-eccf3694611a",
      "name": "Downloading File",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -976,
        832
      ],
      "disabled": true
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Set ID 2').item.json.file_id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "514b81d0-7a07-4421-9a01-91d8c9241e45",
      "name": "Download File 2",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -592,
        1632
      ],
      "disabled": true
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "50929663-5c5b-42cf-9183-8805ed94dea5",
      "name": "Extract from File1",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -368,
        1632
      ],
      "disabled": true
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "3d857c34-ff48-4537-b45d-6111401542c9",
      "name": "Supabase Vector Store1",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        -128,
        1632
      ],
      "disabled": true
    },
    {
      "parameters": {
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "file_id",
                "value": "={{ $('Keep First ID').item.json.file_id }}"
              }
            ]
          }
        }
      },
      "id": "6b3fd566-2d77-4807-ba7d-b7fb50eb1382",
      "name": "Default Data Loader1",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        -32,
        1856
      ],
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "ea5f67b0-5292-4742-aebe-4d2156554ea9",
      "name": "Recursive Character Text Splitter1",
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        48,
        2048
      ],
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b4433ac7-0b70-4405-a564-f3f78f784470",
              "name": "file_id",
              "value": "={{ $('File Updated').item.json.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "328764c0-8525-4de3-82c0-872ea2a919b5",
      "name": "Set ID 2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1024,
        1632
      ],
      "disabled": true
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "documents",
        "filterType": "string",
        "filterString": "=metadata->>file_id=like.*{{ $json.id }}*"
      },
      "id": "a8ec8a23-4aba-462b-b53d-4c0475d08f04",
      "name": "Delete Row(s)",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1248,
        1632
      ],
      "disabled": true
    },
    {
      "parameters": {},
      "id": "aafaf4b5-229b-4a6e-a008-294ead517cc3",
      "name": "Keep First ID",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        -816,
        1632
      ],
      "disabled": true
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "1ce29b4c-69d3-457d-9047-dce2d37116e8",
      "name": "Supabase Vector Store2",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        -512,
        624
      ],
      "disabled": true
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
      "typeVersion": 1,
      "position": [
        784,
        1120
      ],
      "id": "615a2ad3-4418-429a-95c2-643d75421e0c",
      "name": "Embeddings Google Gemini"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
      "typeVersion": 1,
      "position": [
        -544,
        848
      ],
      "id": "f4218ae6-ac4f-4149-bdb9-7fcbb46a2e07",
      "name": "Embeddings Google Gemini1",
      "disabled": true
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
      "typeVersion": 1,
      "position": [
        -176,
        1824
      ],
      "id": "ccfd8ccb-b149-4651-9d1a-be97e987e096",
      "name": "Embeddings Google Gemini2",
      "disabled": true
    },
    {
      "parameters": {
        "model": "deepseek/deepseek-chat-v3-0324:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        1008,
        912
      ],
      "id": "19ad412c-8f8e-4e4a-bbc0-3d7343aac287",
      "name": "OpenRouter Chat Model1"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        224,
        672
      ],
      "id": "3775767f-4653-4159-85c0-dcfb51b9e9a2",
      "name": "Postgres Chat Memory1"
    },
    {
      "parameters": {
        "content": "# Chatbot With RAG\n\n* **When chat message received** â€“ Triggers when a chat message is received (custom CSS for chat UI, currently disabled).\n* **RAG Agent** â€“ Orchestrates responses using a Retrieval-Augmented Generation (RAG) approach, pulling relevant info from vector database and responding to users (disabled).\n* **Postgres Chat Memory** â€“ Stores and retrieves recent chat context from a Postgres database to maintain conversation history (disabled).\n* **Supabase Vector Store** â€“ Interacts with the Supabase vector store to store/query project-related documents (disabled).\n* **Vector Store Tool** â€“ Provides a tool interface for the agent to fetch project information from the vector database (disabled).\n* **Embeddings Google Gemini** â€“ Generates text embeddings using Google Gemini for storing/querying in the vector database (disabled).\n* **OpenRouter Chat Model** â€“ Language model node to generate responses for the agent using OpenRouter (disabled).\n* **OpenRouter Chat Model1** â€“ Alternate language model interface for use within the vector store tool (disabled).\n* **Postgres Chat Memory1** â€“ Alternate node for storing/retrieving conversation memory from Postgres, linked to the chat trigger (disabled).\n\n> **Note:** All nodes in this workflow are currently disabled.",
        "height": 1288,
        "width": 1284,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        16,
        -16
      ],
      "typeVersion": 1,
      "id": "b375886c-af97-40a9-8274-48f6a70514fa",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "# Add To KB When New File Uploaded to Google Drive\n\n* **New File** â€“ Triggers when a new file appears in a specific Google Drive folder.\n* **Set ID** â€“ Extracts and sets the file ID from the triggered event.\n* **Downloading File** â€“ Downloads the file from Google Drive (as plain text) using the set file ID.\n* **Extract from File** â€“ Extracts the text content from the downloaded file.\n* **Recursive Character Text Splitter** â€“ Splits the extracted text into smaller chunks for easier processing.\n* **Default Data Loader** â€“ Loads text chunks and attaches file metadata for further processing.\n* **Supabase Vector Store2** â€“ Stores processed text (with embeddings and metadata) in a Supabase vector database for search/query purposes.\n* **Embeddings Google Gemini1** â€“ Generates vector embeddings for the text using Google Gemini.",
        "height": 800,
        "width": 1500
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1568,
        480
      ],
      "typeVersion": 1,
      "id": "ce10998b-ca68-4a6d-9208-bd8912d1e674",
      "name": "Sticky Note1",
      "disabled": true
    },
    {
      "parameters": {
        "content": "# Update Knowledge Base When a File updated to Google Drive\n\n* **File Updated** â€“ Triggers when a file is updated in a specific Google Drive folder (currently disabled).\n* **Delete Row(s)** â€“ Deletes any existing Supabase records in the \"documents\" table matching the updated file's ID.\n* **Set ID 2** â€“ Extracts and sets the file ID from the updated file event.\n* **Keep First ID** â€“ Selects the first file ID from the data stream for further processing.\n* **Download File 2** â€“ Downloads the updated file from Google Drive as plain text using the set file ID.\n* **Extract from File1** â€“ Extracts text content from the downloaded file.\n* **Recursive Character Text Splitter1** â€“ Splits the extracted text into smaller chunks for easier processing.\n* **Default Data Loader1** â€“ Loads the text chunks and attaches file metadata.\n* **Supabase Vector Store1** â€“ Stores the processed text (with embeddings and metadata) in the Supabase vector database for search/query.\n* **Embeddings Google Gemini2** â€“ Generates vector embeddings for the text using Google Gemini.",
        "height": 920,
        "width": 1940,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1568,
        1312
      ],
      "typeVersion": 1,
      "id": "95de1dde-766c-4883-b53a-9f3ae16626b7",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        528,
        704
      ],
      "id": "59d41840-5312-43e5-b960-a0352c3375dc",
      "name": "Google Gemini Chat Model"
    }
  ],
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "RAG Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "RAG Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Vector Store Tool",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Vector Store Tool": {
      "ai_tool": [
        [
          {
            "node": "RAG Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Set ID": {
      "main": [
        [
          {
            "node": "Downloading File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Supabase Vector Store2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Supabase Vector Store2",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "File Updated": {
      "main": [
        [
          {
            "node": "Delete Row(s)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "New File": {
      "main": [
        [
          {
            "node": "Set ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Downloading File": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download File 2": {
      "main": [
        [
          {
            "node": "Extract from File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File1": {
      "main": [
        [
          {
            "node": "Supabase Vector Store1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader1": {
      "ai_document": [
        [
          {
            "node": "Supabase Vector Store1",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter1": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader1",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Set ID 2": {
      "main": [
        [
          {
            "node": "Keep First ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Row(s)": {
      "main": [
        [
          {
            "node": "Set ID 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Keep First ID": {
      "main": [
        [
          {
            "node": "Download File 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Google Gemini": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Google Gemini1": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store2",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Google Gemini2": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Vector Store Tool",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "When chat message received",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "RAG Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "6e6d26b4-cc37-46ff-beac-1f1bcc748b49",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-08-26T06:21:31.297Z",
      "updatedAt": "2025-08-26T06:21:31.297Z",
      "role": "workflow:owner",
      "workflowId": "nMmxw5mPNUf4iFyk",
      "projectId": "nSUbNPn8P23MJaxQ",
      "project": {
        "createdAt": "2025-08-19T13:24:42.941Z",
        "updatedAt": "2025-08-19T13:25:25.513Z",
        "id": "nSUbNPn8P23MJaxQ",
        "name": "Sanjay Makwana <sanjay.makwana@e2m.solutions>",
        "type": "personal",
        "icon": null,
        "description": null,
        "projectRelations": [
          {
            "createdAt": "2025-08-19T13:24:42.957Z",
            "updatedAt": "2025-08-19T13:24:42.957Z",
            "role": "project:personalOwner",
            "userId": "bec985b6-4c5b-4f76-a28c-588449d2617c",
            "projectId": "nSUbNPn8P23MJaxQ",
            "user": {
              "createdAt": "2025-08-19T13:24:42.285Z",
              "updatedAt": "2025-09-04T04:38:19.000Z",
              "id": "bec985b6-4c5b-4f76-a28c-588449d2617c",
              "email": "sanjay.makwana@e2m.solutions",
              "firstName": "Sanjay",
              "lastName": "Makwana",
              "personalizationAnswers": {
                "version": "v4",
                "personalization_survey_submitted_at": "2025-08-19T13:25:56.618Z",
                "personalization_survey_n8n_version": "1.107.3",
                "automationGoalDevops": [
                  "ticketing-systems-integrations",
                  "data-syncing"
                ],
                "companyIndustryExtended": [
                  "it-industry"
                ],
                "companySize": "<20",
                "companyType": "other",
                "role": "it",
                "reportedSource": "google"
              },
              "settings": {
                "userActivated": true,
                "easyAIWorkflowOnboarded": true,
                "firstSuccessfulWorkflowId": "9HG8S6sJBTFvXXIZ",
                "userActivatedAt": 1755781899419,
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1756103555035
                }
              },
              "role": "global:owner",
              "disabled": false,
              "mfaEnabled": false,
              "lastActiveAt": "2025-09-04",
              "isPending": false
            }
          }
        ]
      }
    }
  ],
  "tags": []
}