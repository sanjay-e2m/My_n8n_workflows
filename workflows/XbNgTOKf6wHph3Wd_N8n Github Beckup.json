{
  "createdAt": "2025-09-03T12:25:34.064Z",
  "updatedAt": "2025-09-04T09:50:25.000Z",
  "id": "XbNgTOKf6wHph3Wd",
  "name": "N8n Github Beckup",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {},
      "id": "9d59f214-5918-4727-8890-e7ce7cc4b561",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -3728,
        80
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "repo.owner",
              "value": "sanjay-e2m"
            },
            {
              "name": "repo.name",
              "value": "My_n8n_workflows"
            },
            {
              "name": "repo.path",
              "value": "workflows/"
            }
          ]
        },
        "options": {}
      },
      "id": "a035c9d6-8447-41b2-9402-adfddc6f432e",
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "position": [
        -3536,
        80
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "4da840e7-5f2b-450d-a962-707a09961110",
      "name": "n8n - get all workflows",
      "type": "n8n-nodes-base.n8n",
      "position": [
        -3312,
        80
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6be8c184-8fb7-47a9-ad42-d0dc3db1eea4",
              "name": "name",
              "type": "string",
              "value": "={{ $json.name }}"
            },
            {
              "id": "n8n-id",
              "name": "n8n_id",
              "type": "string",
              "value": "={{ $json.id }}"
            },
            {
              "id": "n8n-updated",
              "name": "n8n_updated",
              "type": "string",
              "value": "={{ $json.updatedAt }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b392b433-c248-40cd-884d-e03151fb2322",
      "name": "Prepare n8n workflow data",
      "type": "n8n-nodes-base.set",
      "position": [
        -3088,
        80
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "={{ $('Globals').item.json.repo.owner }}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "={{ $('Globals').item.json.repo.name }}",
          "mode": "name"
        },
        "filePath": "=workflows/{{ $json.file_name }}",
        "fileContent": "empty",
        "commitMessage": "first commit"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        -1552,
        96
      ],
      "id": "ad9a8e84-f1d4-4f9c-aa00-8fe0e3bfff11",
      "name": "Create a file",
      "webhookId": "edcd093f-7e2e-45ed-9855-29d49a9147cb"
    },
    {
      "parameters": {
        "operation": "get",
        "workflowId": {
          "__rl": true,
          "value": "={{ $json.n8n_id }}",
          "mode": "id"
        },
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.n8n",
      "typeVersion": 1,
      "position": [
        -2880,
        80
      ],
      "id": "aeaa56e1-7375-4ca1-8310-d7777e3bf85f",
      "name": "Get a workflow"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "=sanjay-e2m",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "=My_n8n_workflows",
          "mode": "name"
        },
        "filePath": "=workflows/{{ $json.file_name }}",
        "fileContent": "={{ JSON.stringify($json.workflow, null, 2) }}",
        "commitMessage": "modify files"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        -1088,
        96
      ],
      "id": "89737b96-3624-4d02-a060-86b9d2064c4b",
      "name": "Edit a file",
      "webhookId": "56f4f5a5-f1d0-4291-a875-f204f4e136cd"
    },
    {
      "parameters": {
        "jsCode": "const workflow = $('Code1').first().json.workflow;\nconst fileName = $input.first().json.content.name;\n\n// Recursive cleaner\nfunction deepClean(obj) {\n  if (typeof obj !== 'object' || obj === null) return obj;\n\n  for (const key in obj) {\n    // Remove auth/secret related keys\n    if (\n      key.toLowerCase().includes('credential') ||\n      key.toLowerCase().includes('token') ||\n      key.toLowerCase().includes('key') ||\n      key.toLowerCase().includes('secret') ||\n      key.toLowerCase().includes('auth') ||\n      key.toLowerCase().includes('password') ||\n      key.toLowerCase().includes('header')\n    ) {\n      delete obj[key];\n    } else if (typeof obj[key] === 'object') {\n      obj[key] = deepClean(obj[key]);\n    }\n  }\n  return obj;\n}\n\nconst cleanWorkflow = deepClean(JSON.parse(JSON.stringify(workflow)));\n\nreturn {\n  json: {\n    file_name: fileName,\n    workflow: cleanWorkflow\n  }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1312,
        96
      ],
      "id": "519485e6-1adb-439a-9f23-71b446d8ae7c",
      "name": "Code"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -2640,
        80
      ],
      "id": "89129153-ed79-4f57-a83d-817d008c28f8",
      "name": "Loop Over Items"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": "Replace Me",
      "typeVersion": 1,
      "position": [
        -848,
        96
      ],
      "id": "ed2d4524-9327-4d7a-a89b-fce26f617ff6"
    },
    {
      "parameters": {
        "jsCode": "// Handle both cases: array or object with array inside\nlet workflows = $json;\n\n// If the data is wrapped inside { data: [...] } or similar\nif (!Array.isArray(workflows) && Array.isArray(workflows.data)) {\n  workflows = workflows.data;\n}\n\n// If it's still not an array, wrap it\nif (!Array.isArray(workflows)) {\n  workflows = [workflows];\n}\n\nreturn workflows.map(wf => {\n  return {\n    json: {\n      workflow: wf,\n      file_name: `${wf.id}_${wf.name}.json`\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2384,
        96
      ],
      "id": "14a2f0ca-11c4-4c5f-bca6-a044129fb35c",
      "name": "Code1"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "sanjay-e2m",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "My_n8n_workflows",
          "mode": "list",
          "cachedResultName": "My_n8n_workflows",
          "cachedResultUrl": "https://github.com/sanjay-e2m/My_n8n_workflows"
        },
        "filePath": "/workflows/",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        -2176,
        96
      ],
      "id": "3db50943-35e0-4588-bd91-0716115b93d8",
      "name": "Get a file",
      "webhookId": "f2000f07-3d6e-44b4-b1a4-4a3e6579689d"
    },
    {
      "parameters": {
        "jsCode": "const file_name = $('Code1').first().json.file_name;  \nconst workflowId_new = file_name.split(\"_\")[0];  \n\nconst results = $input.all().map(item => {\n  const fileName = item.json.name;   // or item.json.content.name if nested\n  const workflowId = fileName.split(\"_\")[0];\n\n  return {\n    file_name: fileName,\n    workflow_id: workflowId,\n    workflowId_new: workflowId_new,\n    isCommon: workflowId === workflowId_new   // true if same, false if not\n  };\n});\n\nreturn results;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1968,
        96
      ],
      "id": "e8fa1fbb-c77d-4282-b715-1c56e98c468b",
      "name": "Code2"
    }
  ],
  "connections": {
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "n8n - get all workflows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "n8n - get all workflows": {
      "main": [
        [
          {
            "node": "Prepare n8n workflow data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare n8n workflow data": {
      "main": [
        [
          {
            "node": "Get a workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a workflow": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create a file": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Edit a file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit a file": {
      "main": [
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Get a file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a file": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Create a file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "a7387f4a-c509-496f-b330-00ea849919dd",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-09-03T12:25:34.064Z",
      "updatedAt": "2025-09-03T12:25:34.064Z",
      "role": "workflow:owner",
      "workflowId": "XbNgTOKf6wHph3Wd",
      "projectId": "nSUbNPn8P23MJaxQ",
      "project": {
        "createdAt": "2025-08-19T13:24:42.941Z",
        "updatedAt": "2025-08-19T13:25:25.513Z",
        "id": "nSUbNPn8P23MJaxQ",
        "name": "Sanjay Makwana <sanjay.makwana@e2m.solutions>",
        "type": "personal",
        "icon": null,
        "description": null,
        "projectRelations": [
          {
            "createdAt": "2025-08-19T13:24:42.957Z",
            "updatedAt": "2025-08-19T13:24:42.957Z",
            "role": "project:personalOwner",
            "userId": "bec985b6-4c5b-4f76-a28c-588449d2617c",
            "projectId": "nSUbNPn8P23MJaxQ",
            "user": {
              "createdAt": "2025-08-19T13:24:42.285Z",
              "updatedAt": "2025-09-04T04:38:19.000Z",
              "id": "bec985b6-4c5b-4f76-a28c-588449d2617c",
              "email": "sanjay.makwana@e2m.solutions",
              "firstName": "Sanjay",
              "lastName": "Makwana",
              "personalizationAnswers": {
                "version": "v4",
                "personalization_survey_submitted_at": "2025-08-19T13:25:56.618Z",
                "personalization_survey_n8n_version": "1.107.3",
                "automationGoalDevops": [
                  "ticketing-systems-integrations",
                  "data-syncing"
                ],
                "companyIndustryExtended": [
                  "it-industry"
                ],
                "companySize": "<20",
                "companyType": "other",
                "role": "it",
                "reportedSource": "google"
              },
              "settings": {
                "userActivated": true,
                "easyAIWorkflowOnboarded": true,
                "firstSuccessfulWorkflowId": "9HG8S6sJBTFvXXIZ",
                "userActivatedAt": 1755781899419,
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1756103555035
                }
              },
              "role": "global:owner",
              "disabled": false,
              "mfaEnabled": false,
              "lastActiveAt": "2025-09-04",
              "isPending": false
            }
          }
        ]
      }
    }
  ],
  "tags": []
}