{
  "createdAt": "2025-10-04T08:03:38.705Z",
  "updatedAt": "2025-10-04T08:47:12.000Z",
  "id": "ikd2t8S840tUK1w9",
  "name": "string",
  "active": false,
  "isArchived": true,
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "=http://localhost:5678/webhook{{ $json.nodes[0].parameters.path }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "input",
              "value": "=Green Vegitable Ads"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1488,
        688
      ],
      "id": "09719796-16ae-48c3-819d-297c3ff69003",
      "name": "HTTP Request5"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=http://localhost:5678/api/v1/workflows/{{ $json.id }}/activate",
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": []
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1280,
        688
      ],
      "id": "14531105-a22d-42f5-a2cf-cd3e2049317e",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"contents\": [\n    {\n      \"parts\": [\n        {\n          \"text\": \"Provide N8n updated Automation\"\n\n        },\n        {\n          \"inline_data\": {\n            \"mime_type\": \"text/plain\",\n            \"data\": \"{{ $json.data }}\"\n          }\n        }\n      ]\n    }\n  ]\n}\n",
        "options": {}
      },
      "id": "0778c43a-05ff-41da-b60e-adcf17d9f5bc",
      "name": "Call Gemini API with PDF2",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        368,
        688
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "operation": "binaryToPropery",
        "options": {}
      },
      "id": "6ee74132-df91-4699-9c20-b28be59df61f",
      "name": "Transform to base64 (pdf)2",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        128,
        688
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "let raw = $input.first().json.candidates[0].content.parts[0].text;\n\n// Step 2 — Remove or wrappers\nraw = raw.replace(/\\s*/, \"\").replace(/$/, \"\").trim();\n\n// Step 3 — Parse into JSON\nlet parsed;\ntry {\n    parsed = JSON.parse(raw);\n} catch (e) {\n    throw new Error(\"Failed to parse modified workflow JSON: \" + e.message);\n}\n\n// Step 4 — Extract modified_workflow\nconst modify_nodes = parsed.modified_workflow.nodes;\nconst modify_connections = parsed.modified_workflow.connections;\nconst changes_made = parsed.changes_made;\n\n// Step 5 — Return it\nreturn [{ json: { modify_nodes, modify_connections, changes_made } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        592,
        688
      ],
      "id": "c185a71d-527c-4dcb-8e70-2ea537bbaff8",
      "name": "Code in JavaScript2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://localhost:5678/api/v1/workflows",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.workflowPayload }}",
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1024,
        688
      ],
      "id": "1807d1c9-b163-4f35-a33d-a8f554fe942e",
      "name": "HTTP Request8"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "15a7ecb6-5335-4441-b2b3-a7818797cb86",
              "name": "workflowPayload",
              "value": "={{ \n  JSON.stringify({\n    \"name\": $json.changes_made.updated_references[0].node,\n    \"nodes\": $json.modify_nodes,\n    \"connections\": $json.modify_connections,\n    \"settings\": {\n      \"saveExecutionProgress\": true,\n      \"saveManualExecutions\": true,\n      \"saveDataErrorExecution\": \"all\",\n      \"saveDataSuccessExecution\": \"all\",\n      \"executionTimeout\": 3600,\n      \"errorWorkflow\": \"VzqKEW0ShTXA5vPj\",\n      \"timezone\": \"America/New_York\",\n      \"executionOrder\": \"v1\"\n    },\n    \"staticData\": {\n      \"lastId\": 1\n    },\n    \"shared\": [\n      {\n        \"role\": \"workflow:owner\",\n        \"workflowId\": \"2tUt1wbLX592XDdX\",\n        \"projectId\": \"2tUt1wbLX592XDdX\",\n        \"project\": {\n          \"name\": \"string\"\n        }\n      }\n    ]\n  })\n}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        800,
        688
      ],
      "id": "b6f7cc44-98cd-4fa0-a083-4d1554e8947c",
      "name": "Edit Fields2"
    }
  ],
  "connections": {
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "HTTP Request5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call Gemini API with PDF2": {
      "main": [
        [
          {
            "node": "Code in JavaScript2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transform to base64 (pdf)2": {
      "main": [
        [
          {
            "node": "Call Gemini API with PDF2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript2": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request8": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "HTTP Request8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "saveExecutionProgress": true,
    "saveManualExecutions": true,
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all",
    "executionTimeout": 3600,
    "timezone": "America/New_York",
    "executionOrder": "v1"
  },
  "staticData": {},
  "meta": null,
  "pinData": null,
  "versionId": "604227af-b3de-416c-9645-bdbefdb32558",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-10-04T08:03:38.708Z",
      "updatedAt": "2025-10-04T08:03:38.708Z",
      "role": "workflow:owner",
      "workflowId": "ikd2t8S840tUK1w9",
      "projectId": "nSUbNPn8P23MJaxQ",
      "project": {
        "createdAt": "2025-08-19T13:24:42.941Z",
        "updatedAt": "2025-08-19T13:25:25.513Z",
        "id": "nSUbNPn8P23MJaxQ",
        "name": "Sanjay Makwana <sanjay.makwana@e2m.solutions>",
        "type": "personal",
        "icon": null,
        "description": null,
        "projectRelations": [
          {
            "createdAt": "2025-08-19T13:24:42.957Z",
            "updatedAt": "2025-08-19T13:24:42.957Z",
            "userId": "bec985b6-4c5b-4f76-a28c-588449d2617c",
            "projectId": "nSUbNPn8P23MJaxQ",
            "user": {
              "createdAt": "2025-08-19T13:24:42.285Z",
              "updatedAt": "2025-10-08T04:11:33.000Z",
              "id": "bec985b6-4c5b-4f76-a28c-588449d2617c",
              "email": "sanjay.makwana@e2m.solutions",
              "firstName": "Sanjay",
              "lastName": "Makwana",
              "personalizationAnswers": {
                "version": "v4",
                "personalization_survey_submitted_at": "2025-08-19T13:25:56.618Z",
                "personalization_survey_n8n_version": "1.107.3",
                "automationGoalDevops": [
                  "ticketing-systems-integrations",
                  "data-syncing"
                ],
                "companyIndustryExtended": [
                  "it-industry"
                ],
                "companySize": "<20",
                "companyType": "other",
                "role": "it",
                "reportedSource": "google"
              },
              "settings": {
                "userActivated": true,
                "easyAIWorkflowOnboarded": true,
                "firstSuccessfulWorkflowId": "9HG8S6sJBTFvXXIZ",
                "userActivatedAt": 1755781899419,
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1756103555035
                }
              },
              "disabled": false,
              "mfaEnabled": false,
              "lastActiveAt": "2025-10-08",
              "isPending": false
            }
          }
        ]
      }
    }
  ],
  "tags": []
}